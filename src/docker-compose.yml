version: '3.4'

services:
  rabbitmq:
    image: rabbitmq:3-management
    # container_name: rabbitmq
    ports:
      - 5672:5672
      - 8080:15672
    volumes:
      - "rabbitmq-data:/var/lib/rabbitmq"

  db:
    image: "mcr.microsoft.com/azure-sql-edge"
    ports: 
      - "1433:1433"
    environment:
      SA_PASSWORD: "21239Admin"
      ACCEPT_EULA: "Y"
    volumes:
      - "mssql-data:/var/opt/mssql"

  invoicingconsumer:
    image: ${DOCKER_REGISTRY-}invoicingconsumer
    build:
      context: .
      dockerfile: InvoicingConsumer/Dockerfile
    restart: on-failure:10
    environment:
      EventStreamHostName: "rabbitmq"

  crmconsumer:
    image: ${DOCKER_REGISTRY-}crmconsumer
    build:
      context: .
      dockerfile: CRMConsumer/Dockerfile
    depends_on:
      - db
      - rabbitmq
    restart: on-failure:10
    environment:
      EventStreamHostName: "rabbitmq"

  loggingconsumer:
    image: ${DOCKER_REGISTRY-}loggingconsumer
    build:
      context: .
      dockerfile: LoggingConsumer/Dockerfile
    depends_on:
      - db
      - rabbitmq
    restart: on-failure:10
    environment:
      EventStreamHostName: "rabbitmq"
      LogDatabaseConnectionString: "Server=db;Database=event_logger;User=sa;Password=21239Admin;"

  dataservice:
    image: ${DOCKER_REGISTRY-}dataservice
    build:
      context: .
      dockerfile: DataService/Dockerfile
    depends_on:
      - db
      - rabbitmq
    restart: on-failure:10
    environment:
      EventStreamHostName: "rabbitmq"
      LogDatabaseConnectionString: "Server=db;Database=event_logger;User=sa;Password=21239Admin;"

  warehouseconsumer:
    image: ${DOCKER_REGISTRY-}warehouseconsumer
    build:
      context: .
      dockerfile: WarehouseConsumer/Dockerfile
    depends_on:
      - rabbitmq
    restart: on-failure:10
    environment:
      EventStreamHostName: "rabbitmq"

  shippingconsumer:
    image: ${DOCKER_REGISTRY-}shippingconsumer
    build:
      context: .
      dockerfile: ShippingConsumer/Dockerfile
    depends_on:
      - rabbitmq
    restart: on-failure:10
    environment:
      EventStreamHostName: "rabbitmq"

  dashboard:
    image: ${DOCKER_REGISTRY-}dashboard
    build:
      context: .
      dockerfile: Dashboard/Dockerfile
    depends_on:
      - db
    restart: on-failure:10
    ports:
      - 8181:80
    environment:
      LogDatabaseConnectionString: "Server=db;Database=event_logger;User=sa;Password=21239Admin;"
      
volumes:
  mssql-data:
  rabbitmq-data:

  


